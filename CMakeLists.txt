cmake_minimum_required(VERSION 3.28)
project(vfighter)

find_package(ECM REQUIRED NO_MODULE)
set(CMAKE_MODULE_PATH ${ECM_MODULE_PATH})

find_package(Vulkan REQUIRED COMPONENTS glslc)
find_package(Wayland REQUIRED COMPONENTS Client Cursor)
find_package(WaylandProtocols REQUIRED)
find_package(WaylandScanner REQUIRED)
find_package(X11 REQUIRED COMPONENTS xkbcommon)

add_executable(vfighter Display.cpp Keyboard.cpp main.cpp MappableFd.cpp Pointer.cpp Renderer.cpp RendererBase.cpp Seat.cpp volk.c Window.cpp)
ecm_add_wayland_client_protocol(vfighter PROTOCOL ${WaylandProtocols_DATADIR}/stable/xdg-shell/xdg-shell.xml BASENAME xdg-shell)
ecm_add_wayland_client_protocol(vfighter PROTOCOL ${WaylandProtocols_DATADIR}/staging/content-type/content-type-v1.xml BASENAME content-type)
ecm_add_wayland_client_protocol(vfighter PROTOCOL ${WaylandProtocols_DATADIR}/unstable/xdg-decoration/xdg-decoration-unstable-v1.xml BASENAME xdg-decoration)
set_target_properties(vfighter PROPERTIES CXX_STANDARD 23)
target_compile_definitions(vfighter PRIVATE VK_NO_PROTOTYPES VK_USE_PLATFORM_WAYLAND_KHR)
target_include_directories(vfighter PRIVATE ${CMAKE_CURRENT_BINARY_DIR})
target_link_libraries(vfighter Wayland::Client Wayland::Cursor X11::xkbcommon)
